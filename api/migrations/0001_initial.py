# Generated by Django 3.1.6 on 2021-04-09 14:43

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dns', models.CharField(max_length=5)),
                ('query_str', models.CharField(max_length=255, null=True)),
                ('query_type', models.IntegerField(max_length=255, null=True)),
                ('record_type', models.CharField(max_length=5, null=True)),
                ('dns_reply', models.TextField(max_length=255, null=True)),
                ('request_time', models.DateTimeField(max_length=255)),
                ('from_host_generic_ip', models.GenericIPAddressField()),
                ('from_port', models.IntegerField(max_length=5, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Http',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('http_command', models.CharField(default=0, max_length=4)),
                ('http_path', models.CharField(default=0, max_length=255)),
                ('request_version', models.CharField(max_length=10, null=True)),
                ('host_generic_ip', models.GenericIPAddressField(null=True)),
                ('user_agent', models.CharField(max_length=255, null=True)),
                ('accept', models.CharField(max_length=255, null=True)),
                ('accept_language', models.CharField(max_length=255, null=True)),
                ('accept_encoding', models.CharField(max_length=255, null=True)),
                ('http_connection', models.CharField(max_length=20, null=True)),
                ('upgrade_insec_req', models.BooleanField(null=True)),
                ('request_timestamp', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Https',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('https_command', models.CharField(default=0, max_length=4)),
                ('https_path', models.CharField(default=0, max_length=255)),
                ('request_version', models.CharField(max_length=10, null=True)),
                ('host_generic_ip', models.GenericIPAddressField(null=True)),
                ('user_agent', models.CharField(max_length=255, null=True)),
                ('accept', models.CharField(max_length=255, null=True)),
                ('accept_language', models.CharField(max_length=255, null=True)),
                ('accept_encoding', models.CharField(max_length=255, null=True)),
                ('https_connection', models.CharField(max_length=20, null=True)),
                ('upgrade_insec_req', models.BooleanField(null=True)),
                ('request_timestamp', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pcap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direction', models.CharField(max_length=25, null=True)),
                ('dst_addr', models.GenericIPAddressField(default='255.254.253.252')),
                ('dst_port', models.IntegerField(default=0)),
                ('icmpv4', models.CharField(max_length=50, null=True)),
                ('icmpv6', models.CharField(max_length=50, null=True)),
                ('interface', models.CharField(max_length=5, null=True)),
                ('ipv4_chksum', models.IntegerField(null=True)),
                ('ipv4_df', models.BooleanField(default=False)),
                ('ipv4_diff_serv', models.PositiveSmallIntegerField(null=True)),
                ('ipv4_ecn', models.PositiveSmallIntegerField(null=True)),
                ('ipv4_evil', models.BooleanField(default=False, null=True)),
                ('ipv4_flags', models.PositiveSmallIntegerField(max_length=3, null=True)),
                ('ipv4_frag_offset', models.PositiveSmallIntegerField(default=0, max_length=2, null=True)),
                ('ipv4_hdr_len', models.PositiveSmallIntegerField(default=0, max_length=3, null=True)),
                ('ipv4_header_len', models.PositiveSmallIntegerField(max_length=4, null=True)),
                ('ipv4_ident', models.PositiveSmallIntegerField(default=0, max_length=2, null=True)),
                ('ipv4_mf', models.BooleanField(default=False, null=True)),
                ('ipv4_packet_len', models.IntegerField(max_length=5, null=True)),
                ('ipv4_raw', models.TextField(max_length=255, null=True)),
                ('ipv4_reserved', models.BooleanField(default=False)),
                ('ipv4_src_addr', models.GenericIPAddressField(default='255.254.253.252')),
                ('ipv4_tos', models.PositiveSmallIntegerField(max_length=4, null=True)),
                ('ipv4_ttl', models.PositiveSmallIntegerField(max_length=3, null=True)),
                ('is_inbound', models.CharField(max_length=5, null=True)),
                ('is_loopback', models.CharField(max_length=5, null=True)),
                ('is_outbound', models.CharField(max_length=5, null=True)),
                ('payload', models.CharField(max_length=255, null=True)),
                ('raw', models.CharField(max_length=255, null=True)),
                ('src_addr', models.CharField(max_length=15, null=True)),
                ('src_port', models.CharField(max_length=5, null=True)),
                ('tcp', models.CharField(max_length=255, null=True)),
                ('tcp_ack', models.BooleanField(null=True)),
                ('tcp_ack_num', models.BigIntegerField(null=True)),
                ('tcp_chksum', models.IntegerField(max_length=10, null=True)),
                ('tcp_control_bits', models.PositiveSmallIntegerField(max_length=3, null=True)),
                ('tcp_cwr', models.BooleanField(null=True)),
                ('tcp_data_offset', models.PositiveSmallIntegerField(max_length=3, null=True)),
                ('tcp_dst_port', models.IntegerField(max_length=5, null=True)),
                ('tcp_ece', models.BooleanField(null=True)),
                ('tcp_fin', models.BooleanField(null=True)),
                ('tcp_header_len', models.PositiveSmallIntegerField(null=True)),
                ('tcp_ns', models.BooleanField(null=True)),
                ('tcp_payload', models.BinaryField(null=True)),
                ('tcp_psh', models.BooleanField(null=True)),
                ('tcp_raw', models.CharField(max_length=255, null=True)),
                ('tcp_reserved', models.PositiveSmallIntegerField(max_length=2, null=True)),
                ('tcp_rst', models.BooleanField(null=True)),
                ('tcp_seq_num', models.BigIntegerField(null=True)),
                ('tcp_src_port', models.IntegerField(max_length=5, null=True)),
                ('tcp_syn', models.BooleanField(null=True)),
                ('tcp_urg', models.BooleanField(null=True)),
                ('tcp_urg_ptr', models.PositiveSmallIntegerField(max_length=2, null=True)),
                ('tcp_window_size', models.PositiveSmallIntegerField(max_length=5, null=True)),
                ('udp_chksum', models.IntegerField(max_length=10, null=True)),
                ('udp_dst_port', models.IntegerField(max_length=5, null=True)),
                ('udp_header_len', models.PositiveSmallIntegerField(max_length=4, null=True)),
                ('udp_payload', models.BinaryField(null=True)),
                ('udp_payload_len', models.IntegerField(max_length=10, null=True)),
                ('udp_raw', models.CharField(max_length=255, null=True)),
                ('udp_src_port', models.IntegerField(max_length=5, null=True)),
                ('udp', models.CharField(max_length=255, null=True)),
                ('wd_addr', models.CharField(max_length=255, null=True)),
            ],
        ),
    ]
